[{"/Users/user/Documents/GitHub/Covid19/src/index.js":"1","/Users/user/Documents/GitHub/Covid19/src/App.js":"2","/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js":"3","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js":"4","/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js":"5","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js":"6","/Users/user/Documents/GitHub/Covid19/src/routes/World.js":"7","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js":"8","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js":"9"},{"size":197,"mtime":1640521298824,"results":"10","hashOfConfig":"11"},{"size":614,"mtime":1640865016530,"results":"12","hashOfConfig":"11"},{"size":2682,"mtime":1641294718166,"results":"13","hashOfConfig":"11"},{"size":530,"mtime":1640864854915,"results":"14","hashOfConfig":"11"},{"size":4685,"mtime":1641294546688,"results":"15","hashOfConfig":"11"},{"size":426,"mtime":1640863765988,"results":"16","hashOfConfig":"11"},{"size":2270,"mtime":1641465597998,"results":"17","hashOfConfig":"11"},{"size":786,"mtime":1640861400866,"results":"18","hashOfConfig":"11"},{"size":2972,"mtime":1641466659113,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hohh81",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Documents/GitHub/Covid19/src/index.js",[],["42","43"],"/Users/user/Documents/GitHub/Covid19/src/App.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js",["44","45","46","47"],"import { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Korea.css\";\nimport Chart from \"../components/Chart/Chart\";\nfunction Korea() {\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    DataSetting();\n  }, []);\n\n  function DataSetting() {\n    const date = new Date();\n    const year = date.getFullYear().toString();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = (\"0\" + date.getDate()).slice(-2);\n    const EndDay = year + month + day;\n\n    let TotalDate = [];\n    $.ajax({\n      type: \"GET\",\n      url: `http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=${Key}&pageNo=1&numOfRows=3&startCreateDt=20191230&endCreateDt=${EndDay}`,\n      dataType: \"xml\",\n      error: function (err) {\n        console.error(err);\n      },\n      success: function (xml) {\n        $(xml)\n          .find(\"item\")\n          .each((idx, item) => {\n            const deathCnt = $(item).find(\"deathCnt\").text(); // 사망자 수\n            const decideCnt = $(item).find(\"decideCnt\").text(); // 확진자 수\n            const stateDt = $(item).find(\"stateDt\").text();\n            const createDt = $(item).find(\"createDt\").text();\n\n            if (stateDt == EndDay) {\n              // 오늘 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 1) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 2) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 3) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            }\n          });\n\n        window.localStorage.setItem(\"total\", JSON.stringify(TotalDate)); // 4일치 데이터\n        SetLoading(false);\n      },\n    });\n  }\n\n  return (\n    <div className=\"Korea_wrap\">\n      {loading ? <h1>loading...</h1> : <Chart />}\n    </div>\n  );\n}\n\nexport default Korea;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js",[],"/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js",["48","49"],"import ApexCharts from \"react-apexcharts\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nfunction Chart() {\n  const data = JSON.parse(window.localStorage.getItem(\"total\"));\n  const deathCntData = [];\n  const decideCntData = [];\n  const createDtData = [];\n\n  data.forEach((element) => {\n    deathCntData.push(element.deathCnt * 1);\n    decideCntData.push(element.decideCnt * 1);\n    createDtData.push(element.createDt);\n  });\n\n  let AddDeathCnt = deathCntData[0] - deathCntData[1],\n    AddDecideCnt = decideCntData[0] - decideCntData[1];\n  let num1 = 0,\n    num2 = AddDecideCnt - 200;\n\n  function animation() {\n    const element = document.getElementsByClassName(\"Chart_Box\");\n    const show_data = document.getElementsByClassName(\"show_data\");\n    for (let i = 0; i < element.length; i++) {\n      const elements = element[i];\n      $(elements)\n        .delay(i * 300)\n        .animate({ opacity: 1, top: \"0%\", boxShadow: \" 0 0 10px #000\" });\n    }\n    $(show_data).animate({ opacity: 1, top: \"20%\", right: \"5%\" }, 1200);\n    setTimeout(() => {\n      const first = setInterval(() => {\n        num1++;\n        $(\".firstcount\").text(`up ${num1}`);\n        if (num1 == AddDeathCnt) {\n          clearInterval(first);\n        }\n      }, 30);\n      const last = setInterval(() => {\n        num2++;\n        $(\".lastcount\").text(`up ${num2}`);\n        if (num2 == AddDecideCnt) {\n          clearInterval(last);\n        }\n      });\n    }, 2000);\n  }\n\n  $(document).ready(() => {\n    animation();\n  });\n\n  const day = createDtData.map((e) => {\n    const month = e.split(\"-\")[1];\n    const day = e.split(\"-\")[2].split(\" \")[0];\n    return `${month}월 ${day}일`;\n  });\n\n  const opstions1 = {\n    title: {\n      text: \"사망자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"사망자\",\n        data: deathCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n  };\n\n  const opstions2 = {\n    title: {\n      text: \"확진자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"확진자\",\n        data: decideCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n    grid: {\n      margin: \"0 auto\",\n    },\n  };\n\n  return (\n    <>\n      <Link to=\"/\">\n        <FontAwesomeIcon icon={faHome} />\n      </Link>\n      <h1 className=\"title\">매일 데이터 갱신 오전 10시</h1>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions1}\n          series={opstions1.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions2}\n          series={opstions2.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"show_data\">\n        <div className=\"decideCntBox s_box\">\n          <p>사망자</p>\n          <h4 className=\"FirstCount\">\n            {deathCntData[3] != null\n              ? deathCntData[3].toLocaleString()\n              : deathCntData[2].toLocaleString()}\n            명<span className=\"firstcount\"></span>\n          </h4>\n        </div>\n        <div className=\"deathCntBox s_box\">\n          <p>확진자</p>\n          <h4>\n            {decideCntData[3] != null\n              ? decideCntData[3].toLocaleString()\n              : decideCntData[2].toLocaleString()}\n            명<span className=\"lastcount\"></span>\n          </h4>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chart;\n","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/World.js",["50"],"/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js",["51"],"import $ from \"jquery\";\nimport { useEffect } from \"react\";\nfunction Country({ ID, Country, TotalConfirmed, TotalDeaths }) {\n  const items = document.getElementsByClassName(\"global_Date\");\n\n  useEffect(() => {\n    dom.init();\n  }, []);\n\n  const dom = {\n    init() {\n      this.ItemAnimation();\n    },\n    ItemAnimation() {\n      [items].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = items[i];\n          $(element)\n            .delay(i * 100)\n            .animate({ opacity: \"1\" });\n        }\n      });\n    },\n  };\n\n  return (\n    <li id=\"itmes\" className=\"global_Date\">\n      {Country}\n      <p>확진자:{TotalConfirmed.toLocaleString()}</p>\n      <p>사망자:{TotalDeaths.toLocaleString()}</p>\n    </li>\n  );\n}\n\nexport default Country;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":39,"column":25,"nodeType":"60","messageId":"61","endLine":39,"endColumn":27},{"ruleId":"58","severity":1,"message":"59","line":47,"column":32,"nodeType":"60","messageId":"61","endLine":47,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":55,"column":32,"nodeType":"60","messageId":"61","endLine":55,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":63,"column":32,"nodeType":"60","messageId":"61","endLine":63,"endColumn":34},{"ruleId":"58","severity":1,"message":"59","line":37,"column":18,"nodeType":"60","messageId":"61","endLine":37,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":44,"column":18,"nodeType":"60","messageId":"61","endLine":44,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":34,"column":6,"nodeType":"64","endLine":34,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":8,"column":6,"nodeType":"64","endLine":8,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":11,"column":10,"nodeType":"70","messageId":"71","endLine":11,"endColumn":14},{"ruleId":"62","severity":1,"message":"72","line":23,"column":6,"nodeType":"64","endLine":23,"endColumn":8,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'world'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'dom'. Either include it or remove the dependency array.",["77"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'Maps'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [world]",{"range":"85","text":"86"},"Update the dependencies array to be: [dom]",{"range":"87","text":"88"},"Update the dependencies array to be: [Maps]",{"range":"89","text":"90"},[675,677],"[world]",[230,232],"[dom]",[796,798],"[Maps]"]