[{"/Users/user/Documents/GitHub/Covid19/src/index.js":"1","/Users/user/Documents/GitHub/Covid19/src/App.js":"2","/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js":"3","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js":"4","/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js":"5","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js":"6","/Users/user/Documents/GitHub/Covid19/src/routes/World.js":"7","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js":"8","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js":"9"},{"size":197,"mtime":1641896093129,"results":"10","hashOfConfig":"11"},{"size":614,"mtime":1641896093127,"results":"12","hashOfConfig":"11"},{"size":2624,"mtime":1641898580971,"results":"13","hashOfConfig":"11"},{"size":530,"mtime":1641896093129,"results":"14","hashOfConfig":"11"},{"size":4685,"mtime":1641896093127,"results":"15","hashOfConfig":"11"},{"size":426,"mtime":1641896093128,"results":"16","hashOfConfig":"11"},{"size":2270,"mtime":1641896093129,"results":"17","hashOfConfig":"11"},{"size":786,"mtime":1641896093128,"results":"18","hashOfConfig":"11"},{"size":3980,"mtime":1641896093129,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hohh81",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/user/Documents/GitHub/Covid19/src/index.js",[],["43","44"],"/Users/user/Documents/GitHub/Covid19/src/App.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js",["45","46","47","48"],"/Users/user/Documents/GitHub/Covid19/src/routes/Main.js",[],"/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js",["49","50"],"import ApexCharts from \"react-apexcharts\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nfunction Chart() {\n  const data = JSON.parse(window.localStorage.getItem(\"total\"));\n  const deathCntData = [];\n  const decideCntData = [];\n  const createDtData = [];\n\n  data.forEach((element) => {\n    deathCntData.push(element.deathCnt * 1);\n    decideCntData.push(element.decideCnt * 1);\n    createDtData.push(element.createDt);\n  });\n\n  let AddDeathCnt = deathCntData[0] - deathCntData[1],\n    AddDecideCnt = decideCntData[0] - decideCntData[1];\n  let num1 = 0,\n    num2 = AddDecideCnt - 200;\n\n  function animation() {\n    const element = document.getElementsByClassName(\"Chart_Box\");\n    const show_data = document.getElementsByClassName(\"show_data\");\n    for (let i = 0; i < element.length; i++) {\n      const elements = element[i];\n      $(elements)\n        .delay(i * 300)\n        .animate({ opacity: 1, top: \"0%\", boxShadow: \" 0 0 10px #000\" });\n    }\n    $(show_data).animate({ opacity: 1, top: \"20%\", right: \"5%\" }, 1200);\n    setTimeout(() => {\n      const first = setInterval(() => {\n        num1++;\n        $(\".firstcount\").text(`up ${num1}`);\n        if (num1 == AddDeathCnt) {\n          clearInterval(first);\n        }\n      }, 30);\n      const last = setInterval(() => {\n        num2++;\n        $(\".lastcount\").text(`up ${num2}`);\n        if (num2 == AddDecideCnt) {\n          clearInterval(last);\n        }\n      });\n    }, 2000);\n  }\n\n  $(document).ready(() => {\n    animation();\n  });\n\n  const day = createDtData.map((e) => {\n    const month = e.split(\"-\")[1];\n    const day = e.split(\"-\")[2].split(\" \")[0];\n    return `${month}월 ${day}일`;\n  });\n\n  const opstions1 = {\n    title: {\n      text: \"사망자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"사망자\",\n        data: deathCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n  };\n\n  const opstions2 = {\n    title: {\n      text: \"확진자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"확진자\",\n        data: decideCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n    grid: {\n      margin: \"0 auto\",\n    },\n  };\n\n  return (\n    <>\n      <Link to=\"/\">\n        <FontAwesomeIcon icon={faHome} />\n      </Link>\n      <h1 className=\"title\">매일 데이터 갱신 오전 10시</h1>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions1}\n          series={opstions1.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions2}\n          series={opstions2.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"show_data\">\n        <div className=\"decideCntBox s_box\">\n          <p>사망자</p>\n          <h4 className=\"FirstCount\">\n            {deathCntData[3] != null\n              ? deathCntData[3].toLocaleString()\n              : deathCntData[2].toLocaleString()}\n            명<span className=\"firstcount\"></span>\n          </h4>\n        </div>\n        <div className=\"deathCntBox s_box\">\n          <p>확진자</p>\n          <h4>\n            {decideCntData[3] != null\n              ? decideCntData[3].toLocaleString()\n              : decideCntData[2].toLocaleString()}\n            명<span className=\"lastcount\"></span>\n          </h4>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chart;\n","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/World.js",["51"],"import $ from \"jquery\";\nimport \"../css/World.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Country from \"../components/country/\bCountry\";\nimport { useEffect, useState } from \"react\";\nfunction World() {\n  const worldCode = [\n    \"RU\",\n    \"CN\",\n    \"US\",\n    \"DE\",\n    \"FR\",\n    \"JP\",\n    \"GB\",\n    \"IL\",\n    \"IN\",\n    \"ES\",\n    \"AR\",\n    \"PH\",\n    \"CA\",\n    \"SE\",\n    \"AU\",\n    \"BR\",\n    \"HK\",\n    \"IT\",\n  ];\n  const [data, SetData] = useState([]);\n  const [loading, Setloading] = useState(true);\n\n  useEffect(() => {\n    world.init();\n  }, []);\n\n  const world = {\n    init() {\n      this.WorldDate();\n      // this.a();\n    },\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n          for (let i = 0; i < list.length; i++) {\n            const { CountryCode } = list[i];\n            worldCode.forEach((code) => {\n              if (code === CountryCode) {\n                SetData((data) => [list[i], ...data]);\n                Setloading(false);\n              }\n            });\n          }\n        },\n      });\n    },\n  };\n\n  return (\n    <div className=\"World_wrap\">\n      {loading ? (\n        <h1 style={{ color: \"#fff\" }}>loading...</h1>\n      ) : (\n        <>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faHome} />\n          </Link>\n          <div className=\"Last_Box main\">\n            <div className=\"container\">\n              <ul>\n                {data.map((item, idx) => {\n                  return (\n                    <Country\n                      key={idx}\n                      ID={item.ID}\n                      Country={item.Country}\n                      TotalConfirmed={item.TotalConfirmed}\n                      TotalDeaths={item.TotalDeaths}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"earth_img_box\"></div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default World;\n","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js",["52"],"import $ from \"jquery\";\nimport { useEffect } from \"react\";\nfunction Country({ ID, Country, TotalConfirmed, TotalDeaths }) {\n  const items = document.getElementsByClassName(\"global_Date\");\n\n  useEffect(() => {\n    dom.init();\n  }, []);\n\n  const dom = {\n    init() {\n      this.ItemAnimation();\n    },\n    ItemAnimation() {\n      [items].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = items[i];\n          $(element)\n            .delay(i * 100)\n            .animate({ opacity: \"1\" });\n        }\n      });\n    },\n  };\n\n  return (\n    <li id=\"itmes\" className=\"global_Date\">\n      {Country}\n      <p>확진자:{TotalConfirmed.toLocaleString()}</p>\n      <p>사망자:{TotalDeaths.toLocaleString()}</p>\n    </li>\n  );\n}\n\nexport default Country;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js",["53","54","55","56","57","58","59","60","61","62","63","64"],"import { useEffect, useState } from \"react\";\nimport \"../css/Vaccination.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nfunction Vaccination() {\n  const { kakao } = window;\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [position, setPostion] = useState({});\n  const onChange = (e) => setText(e.target.value);\n\n  useEffect(() => {\n    Maps.init();\n  }, []);\n\n  const Maps = {\n    // item: [],\n    init() {\n      this.getDate();\n    },\n    async getDate() {\n      const data = await (\n        await fetch(\n          `https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`\n        )\n      ).json();\n      SetData(data.data);\n    },\n    Draw(item) {\n      var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n        mapOption = {\n          center: new kakao.maps.LatLng(37.57613074143258, 126.97696604175948), // 지도의 중심좌표\n          level: 11, // 지도의 확대 레벨\n        };\n      var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n      const markers = [];\n      data.forEach((items) => {\n        const {\n          address, // 주소\n          centerName, //접종센터 이름\n          facilityName, // 시설명\n          id, // 아이디\n          lat, // 위도\n          lng, // 경도\n          phoneNumber, // 시설 전화번호\n          sido, // 시도\n          sigungu, // 시군구\n        } = items;\n        const area = `${sido[0]}${sido[1]}`;\n        if (item === area) {\n          markers.push(new kakao.maps.LatLng(items.lat, items.lng));\n        }\n      });\n\n      let bounds = new kakao.maps.LatLngBounds();\n      let i, marker;\n      for (i = 0; i < markers.length; i++) {\n        // 배열의 좌표들이 잘 보이게 마커를 지도에 추가합니다\n        marker = new kakao.maps.Marker({\n          position: markers[i],\n          clickable: true,\n        });\n        marker.setMap(map);\n\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(markers[i]);\n      }\n      map.setBounds(bounds);\n\n      if (markers.length === 0) {\n        alert(\"알맞는 데이터가 없습니다.\");\n      } else {\n      }\n    },\n    ClickDraw(text) {\n      if (text == \"\") {\n        alert(\"입력값이 없습니다.\");\n      } else {\n        $(\".Text_Input\")\n          .delay(30)\n          .animate({ opacity: \"0\" }, \"slow\")\n          .css({ \"z-index\": \"-1\" });\n        $(\"#map\").animate({ opacity: \"1\" }, \"slow\").css({ \"z-index\": \"10\" });\n        this.Draw(text);\n      }\n    },\n    SlideAnimtion() {\n      const slide = document.getElementsByClassName(\"slide\");\n      [slide].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = item[i];\n          $(element).animate({ left: \"50%\" }, \"slow\");\n        }\n      });\n    },\n  };\n\n  return (\n    <div className=\"Map_wrap\" style={{ width: \"100%\", height: \"100vh\" }}>\n      <div id=\"map\"></div>\n      <div className=\"Text_Input\">\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faHome} />\n        </Link>\n        <h1 className=\"title slide\">코로나 예방접종센터</h1>\n        <div className=\"input_box slide\">\n          <input\n            type=\"text\"\n            onChange={onChange}\n            value={text}\n            style={{ textAlign: \"center\" }}\n            placeholder=\" 원하는 지역을 검색하세요! (Ex:인천)\"\n          />\n          <button\n            onClick={(e) => Maps.ClickDraw(e.target.value)}\n            value={text}\n            className=\"search\"\n          >\n            검색하기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Vaccination;\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":39,"column":25,"nodeType":"71","messageId":"72","endLine":39,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":47,"column":32,"nodeType":"71","messageId":"72","endLine":47,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":55,"column":32,"nodeType":"71","messageId":"72","endLine":55,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":63,"column":32,"nodeType":"71","messageId":"72","endLine":63,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":37,"column":18,"nodeType":"71","messageId":"72","endLine":37,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":44,"column":18,"nodeType":"71","messageId":"72","endLine":44,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":34,"column":6,"nodeType":"75","endLine":34,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":8,"column":6,"nodeType":"75","endLine":8,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":10,"nodeType":"81","messageId":"82","endLine":13,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":13,"column":20,"nodeType":"81","messageId":"82","endLine":13,"endColumn":30},{"ruleId":"73","severity":1,"message":"84","line":18,"column":6,"nodeType":"75","endLine":18,"endColumn":8,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"86","line":44,"column":11,"nodeType":"81","messageId":"82","endLine":44,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":45,"column":11,"nodeType":"81","messageId":"82","endLine":45,"endColumn":21},{"ruleId":"79","severity":1,"message":"88","line":46,"column":11,"nodeType":"81","messageId":"82","endLine":46,"endColumn":23},{"ruleId":"79","severity":1,"message":"89","line":47,"column":11,"nodeType":"81","messageId":"82","endLine":47,"endColumn":13},{"ruleId":"79","severity":1,"message":"90","line":48,"column":11,"nodeType":"81","messageId":"82","endLine":48,"endColumn":14},{"ruleId":"79","severity":1,"message":"91","line":49,"column":11,"nodeType":"81","messageId":"82","endLine":49,"endColumn":14},{"ruleId":"79","severity":1,"message":"92","line":50,"column":11,"nodeType":"81","messageId":"82","endLine":50,"endColumn":22},{"ruleId":"79","severity":1,"message":"93","line":52,"column":11,"nodeType":"81","messageId":"82","endLine":52,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":81,"column":16,"nodeType":"71","messageId":"72","endLine":81,"endColumn":18},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'world'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'dom'. Either include it or remove the dependency array.",["97"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar","'setPostion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Maps'. Either include it or remove the dependency array.",["98"],"'address' is assigned a value but never used.","'centerName' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'id' is assigned a value but never used.","'lat' is assigned a value but never used.","'lng' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'sigungu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [world]",{"range":"105","text":"106"},"Update the dependencies array to be: [dom]",{"range":"107","text":"108"},"Update the dependencies array to be: [Maps]",{"range":"109","text":"110"},[675,677],"[world]",[230,232],"[dom]",[659,661],"[Maps]"]