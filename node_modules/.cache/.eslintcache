[{"/Users/user/Documents/GitHub/Covid19/src/index.js":"1","/Users/user/Documents/GitHub/Covid19/src/App.js":"2","/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js":"3","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js":"4","/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js":"5","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js":"6","/Users/user/Documents/GitHub/Covid19/src/routes/World.js":"7","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js":"8","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js":"9","/Users/user/Documents/GitHub/Covid19/src/components/Map/Map.js":"10"},{"size":197,"mtime":1640521298824,"results":"11","hashOfConfig":"12"},{"size":614,"mtime":1640865016530,"results":"13","hashOfConfig":"12"},{"size":2672,"mtime":1640780051854,"results":"14","hashOfConfig":"12"},{"size":530,"mtime":1640864854915,"results":"15","hashOfConfig":"12"},{"size":4442,"mtime":1640780068653,"results":"16","hashOfConfig":"12"},{"size":426,"mtime":1640863765988,"results":"17","hashOfConfig":"12"},{"size":2084,"mtime":1640864956115,"results":"18","hashOfConfig":"12"},{"size":786,"mtime":1640861400866,"results":"19","hashOfConfig":"12"},{"size":2668,"mtime":1641207994639,"results":"20","hashOfConfig":"12"},{"size":63,"mtime":1640875432150,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hohh81",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Documents/GitHub/Covid19/src/index.js",[],["47","48"],"/Users/user/Documents/GitHub/Covid19/src/App.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js",["49","50","51"],"import { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Korea.css\";\nimport Chart from \"../components/Chart/Chart\";\nfunction Korea() {\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    DataSetting();\n  }, []);\n\n  function DataSetting() {\n    const date = new Date();\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n    const EndDay = `${year + month + day}`;\n    let TotalDate = [];\n    $.ajax({\n      type: \"GET\",\n      url: `http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=${Key}&pageNo=1&numOfRows=3&startCreateDt=20191230&endCreateDt=${EndDay}`,\n      dataType: \"xml\",\n      error: function (err) {\n        console.error(err);\n      },\n      success: function (xml) {\n        $(xml)\n          .find(\"item\")\n          .each((idx, item) => {\n            const deathCnt = $(item).find(\"deathCnt\").text(); // 사망자 수\n            const decideCnt = $(item).find(\"decideCnt\").text(); // 확진자 수\n            const stateDt = $(item).find(\"stateDt\").text();\n            const createDt = $(item).find(\"createDt\").text();\n            if (stateDt === EndDay) {\n              // 오늘 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 1) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 2) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 3) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            }\n          });\n\n        window.localStorage.setItem(\"total\", JSON.stringify(TotalDate)); // 4일치 데이터\n        SetLoading(false);\n      },\n    });\n  }\n\n  return (\n    <div className=\"Korea_wrap\">\n      {loading ? <h1>loading...</h1> : <Chart />}\n    </div>\n  );\n}\n\nexport default Korea;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js",[],"/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js",["52","53"],"import ApexCharts from \"react-apexcharts\";\nimport $ from \"jquery\";\nfunction Chart() {\n  const data = JSON.parse(window.localStorage.getItem(\"total\"));\n  const deathCntData = [];\n  const decideCntData = [];\n  const createDtData = [];\n\n  data.forEach((element) => {\n    deathCntData.push(element.deathCnt * 1);\n    decideCntData.push(element.decideCnt * 1);\n    createDtData.push(element.createDt);\n  });\n\n  let AddDeathCnt = deathCntData[0] - deathCntData[1],\n    AddDecideCnt = decideCntData[0] - decideCntData[1];\n  let num1 = 0,\n    num2 = AddDecideCnt - 200;\n\n  function animation() {\n    const element = document.getElementsByClassName(\"Chart_Box\");\n    const show_data = document.getElementsByClassName(\"show_data\");\n    for (let i = 0; i < element.length; i++) {\n      const elements = element[i];\n      $(elements)\n        .delay(i * 300)\n        .animate({ opacity: 1, top: \"0%\", boxShadow: \" 0 0 10px #000\" });\n    }\n    $(show_data).animate({ opacity: 1, top: \"20%\", right: \"5%\" }, 1200);\n    setTimeout(() => {\n      const first = setInterval(() => {\n        num1++;\n        $(\".firstcount\").text(`up ${num1}`);\n        if (num1 == AddDeathCnt) {\n          clearInterval(first);\n        }\n      }, 30);\n      const last = setInterval(() => {\n        num2++;\n        $(\".lastcount\").text(`up ${num2}`);\n        if (num2 == AddDecideCnt) {\n          clearInterval(last);\n        }\n      });\n    }, 2000);\n  }\n\n  $(document).ready(() => {\n    animation();\n  });\n\n  const day = createDtData.map((e) => {\n    const month = e.split(\"-\")[1];\n    const day = e.split(\"-\")[2].split(\" \")[0];\n    return `${month}월 ${day}일`;\n  });\n\n  const opstions1 = {\n    title: {\n      text: \"사망자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"사망자\",\n        data: deathCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n  };\n\n  const opstions2 = {\n    title: {\n      text: \"확진자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"확진자\",\n        data: decideCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n    grid: {\n      margin: \"0 auto\",\n    },\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">매일 데이터 갱신 오전 10시</h1>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions1}\n          series={opstions1.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions2}\n          series={opstions2.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"show_data\">\n        <div className=\"decideCntBox s_box\">\n          <p>사망자</p>\n          <h4 className=\"FirstCount\">\n            {deathCntData[3] != null\n              ? deathCntData[3].toLocaleString()\n              : deathCntData[2].toLocaleString()}\n            명<span className=\"firstcount\"></span>\n          </h4>\n        </div>\n        <div className=\"deathCntBox s_box\">\n          <p>확진자</p>\n          <h4>\n            {decideCntData[3] != null\n              ? decideCntData[3].toLocaleString()\n              : decideCntData[2].toLocaleString()}\n            명<span className=\"lastcount\"></span>\n          </h4>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chart;\n","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/World.js",["54","55"],"import $ from \"jquery\";\nimport \"../css/World.css\";\nimport Country from \"../components/country/\bCountry\";\nimport { useEffect, useState } from \"react\";\nfunction World() {\n  const worldCode = [\n    \"RU\",\n    \"CN\",\n    \"US\",\n    \"DE\",\n    \"FR\",\n    \"JP\",\n    \"GB\",\n    \"IL\",\n    \"IN\",\n    \"ES\",\n    \"AR\",\n    \"PH\",\n    \"CA\",\n    \"SE\",\n    \"AU\",\n    \"BR\",\n    \"HK\",\n    \"IT\",\n  ];\n  const len = document.getElementsByClassName(\"global_Date\").length;\n  const [data, SetData] = useState([]);\n  const [loading, Setloading] = useState(true);\n\n  useEffect(() => {\n    world.init();\n  }, []);\n\n  const world = {\n    init() {\n      this.WorldDate();\n      // this.a();\n    },\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n          for (let i = 0; i < list.length; i++) {\n            const { CountryCode } = list[i];\n            worldCode.forEach((code) => {\n              if (code === CountryCode) {\n                SetData((data) => [list[i], ...data]);\n                Setloading(false);\n              }\n            });\n          }\n        },\n      });\n    },\n  };\n\n  return (\n    <div className=\"World_wrap\">\n      {loading ? (\n        <h1 style={{ color: \"#fff\" }}>loading...</h1>\n      ) : (\n        <>\n          <div className=\"Last_Box main\">\n            <div className=\"container\">\n              <ul>\n                {data.map((item, idx) => {\n                  return (\n                    <Country\n                      key={idx}\n                      ID={item.ID}\n                      Country={item.Country}\n                      TotalConfirmed={item.TotalConfirmed}\n                      TotalDeaths={item.TotalDeaths}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"earth_img_box\"></div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default World;\n","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js",["56"],"import $ from \"jquery\";\nimport { useEffect } from \"react\";\nfunction Country({ ID, Country, TotalConfirmed, TotalDeaths }) {\n  const items = document.getElementsByClassName(\"global_Date\");\n\n  useEffect(() => {\n    dom.init();\n  }, []);\n\n  const dom = {\n    init() {\n      this.ItemAnimation();\n    },\n    ItemAnimation() {\n      [items].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = items[i];\n          $(element)\n            .delay(i * 100)\n            .animate({ opacity: \"1\" });\n        }\n      });\n    },\n  };\n\n  return (\n    <li id=\"itmes\" className=\"global_Date\">\n      {Country}\n      <p>확진자:{TotalConfirmed.toLocaleString()}</p>\n      <p>사망자:{TotalDeaths.toLocaleString()}</p>\n    </li>\n  );\n}\n\nexport default Country;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js",["57","58","59","60","61","62","63","64","65","66","67","68"],"/Users/user/Documents/GitHub/Covid19/src/components/Map/Map.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":45,"column":32,"nodeType":"75","messageId":"76","endLine":45,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":53,"column":32,"nodeType":"75","messageId":"76","endLine":53,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":61,"column":32,"nodeType":"75","messageId":"76","endLine":61,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":34,"column":18,"nodeType":"75","messageId":"76","endLine":34,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":41,"column":18,"nodeType":"75","messageId":"76","endLine":41,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":26,"column":9,"nodeType":"79","messageId":"80","endLine":26,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":32,"column":6,"nodeType":"83","endLine":32,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":8,"column":6,"nodeType":"83","endLine":8,"endColumn":8,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"87","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"88","line":14,"column":11,"nodeType":"79","messageId":"80","endLine":14,"endColumn":19},{"ruleId":"77","severity":1,"message":"89","line":15,"column":11,"nodeType":"79","messageId":"80","endLine":15,"endColumn":20},{"ruleId":"81","severity":1,"message":"90","line":20,"column":6,"nodeType":"83","endLine":20,"endColumn":8,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"92","line":45,"column":11,"nodeType":"79","messageId":"80","endLine":45,"endColumn":14},{"ruleId":"77","severity":1,"message":"93","line":48,"column":17,"nodeType":"79","messageId":"80","endLine":48,"endColumn":24},{"ruleId":"77","severity":1,"message":"94","line":48,"column":26,"nodeType":"79","messageId":"80","endLine":48,"endColumn":36},{"ruleId":"77","severity":1,"message":"95","line":48,"column":38,"nodeType":"79","messageId":"80","endLine":48,"endColumn":50},{"ruleId":"77","severity":1,"message":"96","line":48,"column":52,"nodeType":"79","messageId":"80","endLine":48,"endColumn":55},{"ruleId":"77","severity":1,"message":"97","line":48,"column":57,"nodeType":"79","messageId":"80","endLine":48,"endColumn":60},{"ruleId":"77","severity":1,"message":"98","line":48,"column":62,"nodeType":"79","messageId":"80","endLine":48,"endColumn":66},{"ruleId":"77","severity":1,"message":"99","line":48,"column":68,"nodeType":"79","messageId":"80","endLine":48,"endColumn":75},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'len' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'world'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'dom'. Either include it or remove the dependency array.",["103"],"'data' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Maps'. Either include it or remove the dependency array.",["104"],"'map' is assigned a value but never used.","'address' is assigned a value but never used.","'centerName' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'lat' is assigned a value but never used.","'lng' is assigned a value but never used.","'sido' is assigned a value but never used.","'sigungu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [world]",{"range":"111","text":"112"},"Update the dependencies array to be: [dom]",{"range":"113","text":"114"},"Update the dependencies array to be: [Maps]",{"range":"115","text":"116"},[577,579],"[world]",[230,232],"[dom]",[632,634],"[Maps]"]