[{"/Users/user/Documents/GitHub/Covid19/src/index.js":"1","/Users/user/Documents/GitHub/Covid19/src/App.js":"2","/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js":"3","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js":"4","/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js":"5","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js":"6","/Users/user/Documents/GitHub/Covid19/src/routes/World.js":"7","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js":"8","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js":"9"},{"size":197,"mtime":1640521298824,"results":"10","hashOfConfig":"11"},{"size":614,"mtime":1640865016530,"results":"12","hashOfConfig":"11"},{"size":2713,"mtime":1641730393673,"results":"13","hashOfConfig":"11"},{"size":530,"mtime":1640864854915,"results":"14","hashOfConfig":"11"},{"size":4685,"mtime":1641294546688,"results":"15","hashOfConfig":"11"},{"size":426,"mtime":1640863765988,"results":"16","hashOfConfig":"11"},{"size":2270,"mtime":1641465597998,"results":"17","hashOfConfig":"11"},{"size":786,"mtime":1640861400866,"results":"18","hashOfConfig":"11"},{"size":3980,"mtime":1641731045812,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hohh81",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Documents/GitHub/Covid19/src/index.js",[],["42","43"],"/Users/user/Documents/GitHub/Covid19/src/App.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js",["44","45","46","47"],"/Users/user/Documents/GitHub/Covid19/src/routes/Main.js",[],"/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js",["48","49"],"import ApexCharts from \"react-apexcharts\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nfunction Chart() {\n  const data = JSON.parse(window.localStorage.getItem(\"total\"));\n  const deathCntData = [];\n  const decideCntData = [];\n  const createDtData = [];\n\n  data.forEach((element) => {\n    deathCntData.push(element.deathCnt * 1);\n    decideCntData.push(element.decideCnt * 1);\n    createDtData.push(element.createDt);\n  });\n\n  let AddDeathCnt = deathCntData[0] - deathCntData[1],\n    AddDecideCnt = decideCntData[0] - decideCntData[1];\n  let num1 = 0,\n    num2 = AddDecideCnt - 200;\n\n  function animation() {\n    const element = document.getElementsByClassName(\"Chart_Box\");\n    const show_data = document.getElementsByClassName(\"show_data\");\n    for (let i = 0; i < element.length; i++) {\n      const elements = element[i];\n      $(elements)\n        .delay(i * 300)\n        .animate({ opacity: 1, top: \"0%\", boxShadow: \" 0 0 10px #000\" });\n    }\n    $(show_data).animate({ opacity: 1, top: \"20%\", right: \"5%\" }, 1200);\n    setTimeout(() => {\n      const first = setInterval(() => {\n        num1++;\n        $(\".firstcount\").text(`up ${num1}`);\n        if (num1 == AddDeathCnt) {\n          clearInterval(first);\n        }\n      }, 30);\n      const last = setInterval(() => {\n        num2++;\n        $(\".lastcount\").text(`up ${num2}`);\n        if (num2 == AddDecideCnt) {\n          clearInterval(last);\n        }\n      });\n    }, 2000);\n  }\n\n  $(document).ready(() => {\n    animation();\n  });\n\n  const day = createDtData.map((e) => {\n    const month = e.split(\"-\")[1];\n    const day = e.split(\"-\")[2].split(\" \")[0];\n    return `${month}월 ${day}일`;\n  });\n\n  const opstions1 = {\n    title: {\n      text: \"사망자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"사망자\",\n        data: deathCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n  };\n\n  const opstions2 = {\n    title: {\n      text: \"확진자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"확진자\",\n        data: decideCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n    grid: {\n      margin: \"0 auto\",\n    },\n  };\n\n  return (\n    <>\n      <Link to=\"/\">\n        <FontAwesomeIcon icon={faHome} />\n      </Link>\n      <h1 className=\"title\">매일 데이터 갱신 오전 10시</h1>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions1}\n          series={opstions1.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions2}\n          series={opstions2.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"show_data\">\n        <div className=\"decideCntBox s_box\">\n          <p>사망자</p>\n          <h4 className=\"FirstCount\">\n            {deathCntData[3] != null\n              ? deathCntData[3].toLocaleString()\n              : deathCntData[2].toLocaleString()}\n            명<span className=\"firstcount\"></span>\n          </h4>\n        </div>\n        <div className=\"deathCntBox s_box\">\n          <p>확진자</p>\n          <h4>\n            {decideCntData[3] != null\n              ? decideCntData[3].toLocaleString()\n              : decideCntData[2].toLocaleString()}\n            명<span className=\"lastcount\"></span>\n          </h4>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chart;\n","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/World.js",["50"],"import $ from \"jquery\";\nimport \"../css/World.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Country from \"../components/country/\bCountry\";\nimport { useEffect, useState } from \"react\";\nfunction World() {\n  const worldCode = [\n    \"RU\",\n    \"CN\",\n    \"US\",\n    \"DE\",\n    \"FR\",\n    \"JP\",\n    \"GB\",\n    \"IL\",\n    \"IN\",\n    \"ES\",\n    \"AR\",\n    \"PH\",\n    \"CA\",\n    \"SE\",\n    \"AU\",\n    \"BR\",\n    \"HK\",\n    \"IT\",\n  ];\n  const [data, SetData] = useState([]);\n  const [loading, Setloading] = useState(true);\n\n  useEffect(() => {\n    world.init();\n  }, []);\n\n  const world = {\n    init() {\n      this.WorldDate();\n      // this.a();\n    },\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n          for (let i = 0; i < list.length; i++) {\n            const { CountryCode } = list[i];\n            worldCode.forEach((code) => {\n              if (code === CountryCode) {\n                SetData((data) => [list[i], ...data]);\n                Setloading(false);\n              }\n            });\n          }\n        },\n      });\n    },\n  };\n\n  return (\n    <div className=\"World_wrap\">\n      {loading ? (\n        <h1 style={{ color: \"#fff\" }}>loading...</h1>\n      ) : (\n        <>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faHome} />\n          </Link>\n          <div className=\"Last_Box main\">\n            <div className=\"container\">\n              <ul>\n                {data.map((item, idx) => {\n                  return (\n                    <Country\n                      key={idx}\n                      ID={item.ID}\n                      Country={item.Country}\n                      TotalConfirmed={item.TotalConfirmed}\n                      TotalDeaths={item.TotalDeaths}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"earth_img_box\"></div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default World;\n","/Users/user/Documents/GitHub/Covid19/src/components/country/\bCountry.js",["51"],"import $ from \"jquery\";\nimport { useEffect } from \"react\";\nfunction Country({ ID, Country, TotalConfirmed, TotalDeaths }) {\n  const items = document.getElementsByClassName(\"global_Date\");\n\n  useEffect(() => {\n    dom.init();\n  }, []);\n\n  const dom = {\n    init() {\n      this.ItemAnimation();\n    },\n    ItemAnimation() {\n      [items].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = items[i];\n          $(element)\n            .delay(i * 100)\n            .animate({ opacity: \"1\" });\n        }\n      });\n    },\n  };\n\n  return (\n    <li id=\"itmes\" className=\"global_Date\">\n      {Country}\n      <p>확진자:{TotalConfirmed.toLocaleString()}</p>\n      <p>사망자:{TotalDeaths.toLocaleString()}</p>\n    </li>\n  );\n}\n\nexport default Country;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js",["52","53","54","55","56","57","58","59","60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":40,"column":25,"nodeType":"70","messageId":"71","endLine":40,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":48,"column":32,"nodeType":"70","messageId":"71","endLine":48,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":56,"column":32,"nodeType":"70","messageId":"71","endLine":56,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":64,"column":32,"nodeType":"70","messageId":"71","endLine":64,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":37,"column":18,"nodeType":"70","messageId":"71","endLine":37,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":44,"column":18,"nodeType":"70","messageId":"71","endLine":44,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":34,"column":6,"nodeType":"74","endLine":34,"endColumn":8,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":8,"column":6,"nodeType":"74","endLine":8,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":10,"nodeType":"80","messageId":"81","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":13,"column":20,"nodeType":"80","messageId":"81","endLine":13,"endColumn":30},{"ruleId":"72","severity":1,"message":"83","line":18,"column":6,"nodeType":"74","endLine":18,"endColumn":8,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"85","line":44,"column":11,"nodeType":"80","messageId":"81","endLine":44,"endColumn":18},{"ruleId":"78","severity":1,"message":"86","line":45,"column":11,"nodeType":"80","messageId":"81","endLine":45,"endColumn":21},{"ruleId":"78","severity":1,"message":"87","line":46,"column":11,"nodeType":"80","messageId":"81","endLine":46,"endColumn":23},{"ruleId":"78","severity":1,"message":"88","line":47,"column":11,"nodeType":"80","messageId":"81","endLine":47,"endColumn":13},{"ruleId":"78","severity":1,"message":"89","line":48,"column":11,"nodeType":"80","messageId":"81","endLine":48,"endColumn":14},{"ruleId":"78","severity":1,"message":"90","line":49,"column":11,"nodeType":"80","messageId":"81","endLine":49,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":50,"column":11,"nodeType":"80","messageId":"81","endLine":50,"endColumn":22},{"ruleId":"78","severity":1,"message":"92","line":52,"column":11,"nodeType":"80","messageId":"81","endLine":52,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":81,"column":16,"nodeType":"70","messageId":"71","endLine":81,"endColumn":18},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'world'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'dom'. Either include it or remove the dependency array.",["96"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar","'setPostion' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Maps'. Either include it or remove the dependency array.",["97"],"'address' is assigned a value but never used.","'centerName' is assigned a value but never used.","'facilityName' is assigned a value but never used.","'id' is assigned a value but never used.","'lat' is assigned a value but never used.","'lng' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'sigungu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [world]",{"range":"104","text":"105"},"Update the dependencies array to be: [dom]",{"range":"106","text":"107"},"Update the dependencies array to be: [Maps]",{"range":"108","text":"109"},[675,677],"[world]",[230,232],"[dom]",[659,661],"[Maps]"]