[{"/Users/user/Documents/GitHub/Covid19/src/index.js":"1","/Users/user/Documents/GitHub/Covid19/src/App.js":"2","/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js":"3","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js":"4","/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js":"5","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js":"6","/Users/user/Documents/GitHub/Covid19/src/routes/World.js":"7"},{"size":197,"mtime":1640521298824,"results":"8","hashOfConfig":"9"},{"size":493,"mtime":1640611990490,"results":"10","hashOfConfig":"9"},{"size":2672,"mtime":1640601168276,"results":"11","hashOfConfig":"9"},{"size":509,"mtime":1640611954471,"results":"12","hashOfConfig":"9"},{"size":4397,"mtime":1640610134901,"results":"13","hashOfConfig":"9"},{"size":426,"mtime":1640521298823,"results":"14","hashOfConfig":"9"},{"size":2358,"mtime":1640682760229,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hohh81",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Documents/GitHub/Covid19/src/index.js",[],["33","34"],"/Users/user/Documents/GitHub/Covid19/src/App.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js",["35","36","37"],"import { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Korea.css\";\nimport Chart from \"../components/Chart/Chart\";\nfunction Korea() {\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    DataSetting();\n  }, []);\n\n  function DataSetting() {\n    const date = new Date();\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n    const EndDay = `${year + month + day}`;\n    let TotalDate = [];\n    $.ajax({\n      type: \"GET\",\n      url: `http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=${Key}&pageNo=1&numOfRows=3&startCreateDt=20191230&endCreateDt=${EndDay}`,\n      dataType: \"xml\",\n      error: function (err) {\n        console.error(err);\n      },\n      success: function (xml) {\n        $(xml)\n          .find(\"item\")\n          .each((idx, item) => {\n            const deathCnt = $(item).find(\"deathCnt\").text(); // 사망자 수\n            const decideCnt = $(item).find(\"decideCnt\").text(); // 확진자 수\n            const stateDt = $(item).find(\"stateDt\").text();\n            const createDt = $(item).find(\"createDt\").text();\n            if (stateDt === EndDay) {\n              // 오늘 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 1) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 2) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            } else if (stateDt == EndDay * 1 - 3) {\n              // 어제 데이터 저장\n              const obj = {\n                deathCnt,\n                decideCnt,\n                createDt,\n              };\n              TotalDate.push(obj);\n            }\n          });\n\n        window.localStorage.setItem(\"total\", JSON.stringify(TotalDate)); // 4일치 데이터\n        SetLoading(false);\n      },\n    });\n  }\n\n  return (\n    <div className=\"Korea_wrap\">\n      {loading ? <h1>loading...</h1> : <Chart />}\n    </div>\n  );\n}\n\nexport default Korea;\n","/Users/user/Documents/GitHub/Covid19/src/routes/Main.js",[],"/Users/user/Documents/GitHub/Covid19/src/components/Chart/Chart.js",["38","39","40","41"],"import ApexCharts from \"react-apexcharts\";\nimport $ from \"jquery\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nfunction Chart() {\n  const data = JSON.parse(window.localStorage.getItem(\"total\"));\n  const deathCntData = [];\n  const decideCntData = [];\n  const createDtData = [];\n\n  data.forEach((element) => {\n    deathCntData.push(element.deathCnt * 1);\n    decideCntData.push(element.decideCnt * 1);\n    createDtData.push(element.createDt);\n  });\n\n  let AddDeathCnt = deathCntData[0] - deathCntData[1] ,\n    AddDecideCnt = decideCntData[0]  - decideCntData[1] ;\n  let num1 = 0, num2 = AddDecideCnt - 200;\n\n  function animation() {\n    const element = document.getElementsByClassName(\"Chart_Box\");\n    const show_data = document.getElementsByClassName(\"show_data\");\n    for (let i = 0; i < element.length; i++) {\n      const elements = element[i];\n      $(elements)\n        .delay(i * 300)\n        .animate({ opacity: 1, top: \"0%\", boxShadow:\" 0 0 10px #000\" });\n    }\n    $(show_data).animate({ opacity: 1, top: \"20%\", right: \"5%\" }, 1200);\n    setTimeout(() => {\n     const first = setInterval(() => {\n        num1 ++;\n        $(\".firstcount\").text(`up ${num1}`);\n        if(num1 == AddDeathCnt) {\n          clearInterval(first);\n          console.log(num1);\n        }\n     },30);\n     const last = setInterval(() => {\n      num2 ++;\n      $(\".lastcount\").text(`up ${num2}`);\n      if(num2 == AddDecideCnt) {\n        clearInterval(last);\n        console.log(num2);\n      }\n   })\n    },2000)\n  }\n\n  $(document).ready(() => {\n    animation();\n  });\n\n  const day = createDtData.map((e) => {\n    const month = e.split(\"-\")[1];\n    const day = e.split(\"-\")[2].split(\" \")[0];\n    return `${month}월 ${day}일`;\n  });\n\n  const opstions1 = {\n    title: {\n      text: \"사망자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"사망자\",\n        data: deathCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n  };\n\n  const opstions2 = {\n    title: {\n      text: \"확진자 현황판\",\n      floating: true,\n      offsetY: 0,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontSize: \"20px\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    chart: {\n      type: \"bar\",\n    },\n    series: [\n      {\n        name: \"확진자\",\n        data: decideCntData.sort(),\n      },\n    ],\n    xaxis: {\n      categories: day.sort(),\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return `${val.toLocaleString()}명`;\n        },\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"55%\",\n        endingShape: \"rounded\",\n      },\n    },\n    grid: {\n      margin: \"0 auto\",\n    },\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">매일 데이터 갱신 오전 10시</h1>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions1}\n          series={opstions1.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"Chart_box_wrap\">\n        <ApexCharts\n          className=\"Chart_Box\"\n          options={opstions2}\n          series={opstions2.series}\n          type=\"bar\"\n          width=\"700px\"\n          height=\"300px\"\n        />\n      </div>\n      <div className=\"show_data\">\n        <div className=\"decideCntBox s_box\">\n          <p>사망자</p>\n          <h4 className=\"FirstCount\">{deathCntData[3].toLocaleString()}명\n            <span className=\"firstcount\"></span>\n          </h4>\n        </div>\n        <div className=\"deathCntBox s_box\">\n        <p>확진자</p>\n          <h4>{decideCntData[3].toLocaleString()}명\n            <span className=\"lastcount\"></span>\n          </h4>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Chart;\n","/Users/user/Documents/GitHub/Covid19/src/components/Menu/Menu.js",[],"/Users/user/Documents/GitHub/Covid19/src/routes/World.js",["42","43","44","45","46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":45,"column":32,"nodeType":"54","messageId":"55","endLine":45,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":53,"column":32,"nodeType":"54","messageId":"55","endLine":53,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":61,"column":32,"nodeType":"54","messageId":"55","endLine":61,"endColumn":34},{"ruleId":"56","severity":1,"message":"57","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":35,"column":17,"nodeType":"54","messageId":"55","endLine":35,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":43,"column":15,"nodeType":"54","messageId":"55","endLine":43,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":3,"column":9,"nodeType":"58","messageId":"59","endLine":3,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":4,"column":9,"nodeType":"58","messageId":"59","endLine":4,"endColumn":22},{"ruleId":"56","severity":1,"message":"62","line":4,"column":23,"nodeType":"58","messageId":"59","endLine":4,"endColumn":37},{"ruleId":"52","severity":1,"message":"53","line":27,"column":37,"nodeType":"54","messageId":"55","endLine":27,"endColumn":39},{"ruleId":"52","severity":1,"message":"53","line":42,"column":20,"nodeType":"54","messageId":"55","endLine":42,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":51,"column":20,"nodeType":"54","messageId":"55","endLine":51,"endColumn":22},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faCaretUp' is defined but never used.","'faChevronLeft' is defined but never used.","'faChevronRight' is defined but never used.","no-global-assign","no-unsafe-negation"]