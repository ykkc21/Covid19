{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/World.js\",\n    _s = $RefreshSig$();\n\nimport $ from \"jquery\";\nimport \"../css/World.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Country from \"../components/country/\bCountry\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction World() {\n  _s();\n\n  const earth = document.getElementsByClassName(\"earth_img_box\");\n  const worldCode = [\"RU\", \"CN\", \"US\", \"DE\", \"FR\", \"JP\", \"GB\", \"IL\", \"IN\", \"ES\", \"AR\", \"PH\", \"CA\", \"SE\", \"AU\", \"BR\", \"HK\", \"IT\"];\n  const [data, SetData] = useState([]);\n  const [loading, Setloading] = useState(true);\n  useEffect(() => {\n    world.init();\n  }, []);\n  const world = {\n    init() {\n      this.WorldDate(); // this.a();\n    },\n\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n\n          for (let i = 0; i < list.length; i++) {\n            const {\n              CountryCode\n            } = list[i];\n            worldCode.forEach(code => {\n              if (code === CountryCode) {\n                SetData(data => [list[i], ...data]);\n                Setloading(false);\n              }\n            });\n          }\n        }\n      });\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"World_wrap\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#fff\"\n      },\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Last_Box main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: data.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(Country, {\n                ID: item.ID,\n                Country: item.Country,\n                TotalConfirmed: item.TotalConfirmed,\n                TotalDeaths: item.TotalDeaths\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"earth_img_box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(World, \"Q6jpjgrnbuXw7oQ0Ms73vHUjBhI=\");\n\n_c = World;\nexport default World;\n\nvar _c;\n\n$RefreshReg$(_c, \"World\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/World.js"],"names":["$","Link","FontAwesomeIcon","faHome","Country","useEffect","useState","World","earth","document","getElementsByClassName","worldCode","data","SetData","loading","Setloading","world","init","WorldDate","ajax","type","url","dataType","error","err","console","success","res","list","Countries","i","length","CountryCode","forEach","code","color","map","item","idx","ID","TotalConfirmed","TotalDeaths"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\nimport \"../css/World.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport Country from \"../components/country/\bCountry\";\nimport { useEffect, useState } from \"react\";\nfunction World() {\n  const earth = document.getElementsByClassName(\"earth_img_box\");\n  const worldCode = [\n    \"RU\",\n    \"CN\",\n    \"US\",\n    \"DE\",\n    \"FR\",\n    \"JP\",\n    \"GB\",\n    \"IL\",\n    \"IN\",\n    \"ES\",\n    \"AR\",\n    \"PH\",\n    \"CA\",\n    \"SE\",\n    \"AU\",\n    \"BR\",\n    \"HK\",\n    \"IT\",\n  ];\n  const [data, SetData] = useState([]);\n  const [loading, Setloading] = useState(true);\n\n  useEffect(() => {\n    world.init();\n  }, []);\n\n  const world = {\n    init() {\n      this.WorldDate();\n      // this.a();\n    },\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n          for (let i = 0; i < list.length; i++) {\n            const { CountryCode } = list[i];\n            worldCode.forEach((code) => {\n              if (code === CountryCode) {\n                SetData((data) => [list[i], ...data]);\n                Setloading(false);\n              }\n            });\n          }\n        },\n      });\n    },\n  };\n\n  return (\n    <div className=\"World_wrap\">\n      {loading ? (\n        <h1 style={{ color: \"#fff\" }}>loading...</h1>\n      ) : (\n        <>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faHome} />\n          </Link>\n          <div className=\"Last_Box main\">\n            <div className=\"container\">\n              <ul>\n                {data.map((item, idx) => {\n                  return (\n                    <Country\n                      key={idx}\n                      ID={item.ID}\n                      Country={item.Country}\n                      TotalConfirmed={item.TotalConfirmed}\n                      TotalDeaths={item.TotalDeaths}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div className=\"earth_img_box\"></div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default World;\n"]},"metadata":{},"sourceType":"module"}