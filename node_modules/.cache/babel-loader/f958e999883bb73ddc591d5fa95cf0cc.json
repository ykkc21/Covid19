{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // import MapElement from \"../components/Map/Map\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Vaccination() {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  const Key = \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.watchPosition(pos => {\n      let latitude = pos.coords.latitude;\n      let longitude = pos.coords.longitude;\n      let max_latitude = latitude += 0.01 * 1;\n      let min_latitude = latitude -= 0.01 * 1;\n      let max_longitude = longitude += 0.015 * 1;\n      let min_longitude = longitude -= 0.015 * 1;\n      console.log(max_latitude, min_latitude);\n      Maps.Draw(latitude, longitude);\n    });\n    Maps.init();\n  }, []);\n  const Maps = {\n    init() {\n      this.getDate();\n    },\n\n    async getDate() {\n      const data = await (await fetch(`https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`)).json();\n      SetData(data.data);\n    },\n\n    Draw(lat, long) {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(lat, long),\n        level: 3\n      };\n      var map = new kakao.maps.Map(container, options);\n      var markerPosition = new kakao.maps.LatLng(lat, long);\n      var marker = new kakao.maps.Marker({\n        position: markerPosition\n      });\n      marker.setMap(map); // 마커 지도위에 그리기\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map_wrap\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vaccination, \"5bWMJ8+QXfglENJgHVyCVZn6AFk=\");\n\n_c = Vaccination;\nexport default Vaccination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccination\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js"],"names":["useEffect","useState","Vaccination","kakao","window","Key","data","SetData","navigator","geolocation","watchPosition","pos","latitude","coords","longitude","max_latitude","min_latitude","max_longitude","min_longitude","console","log","Maps","Draw","init","getDate","fetch","json","lat","long","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","setMap","width","height"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYC,MAAlB;AACA,QAAMC,GAAG,GACP,gGADF;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACC,WAAV,CAAsBC,aAAtB,CAAqCC,GAAD,IAAS;AAC3C,UAAIC,QAAQ,GAAGD,GAAG,CAACE,MAAJ,CAAWD,QAA1B;AACA,UAAIE,SAAS,GAAGH,GAAG,CAACE,MAAJ,CAAWC,SAA3B;AACA,UAAIC,YAAY,GAAIH,QAAQ,IAAI,OAAO,CAAvC;AACA,UAAII,YAAY,GAAIJ,QAAQ,IAAI,OAAO,CAAvC;AACA,UAAIK,aAAa,GAAIH,SAAS,IAAI,QAAQ,CAA1C;AACA,UAAII,aAAa,GAAIJ,SAAS,IAAI,QAAQ,CAA1C;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAA0BC,YAA1B;AACAK,MAAAA,IAAI,CAACC,IAAL,CAAUV,QAAV,EAAoBE,SAApB;AACD,KATD;AAUAO,IAAAA,IAAI,CAACE,IAAL;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,QAAMF,IAAI,GAAG;AACXE,IAAAA,IAAI,GAAG;AACL,WAAKC,OAAL;AACD,KAHU;;AAIX,UAAMA,OAAN,GAAgB;AACd,YAAMlB,IAAI,GAAG,MAAM,CACjB,MAAMmB,KAAK,CACR,gGAA+FpB,GAAI,EAD3F,CADM,EAIjBqB,IAJiB,EAAnB;AAKAnB,MAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACD,KAXU;;AAYXgB,IAAAA,IAAI,CAACK,GAAD,EAAMC,IAAN,EAAY;AACd,YAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AAEA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,IAAI9B,KAAK,CAAC+B,IAAN,CAAWC,MAAf,CAAsBR,GAAtB,EAA2BC,IAA3B,CADM;AAEdQ,QAAAA,KAAK,EAAE;AAFO,OAAhB;AAKA,UAAIC,GAAG,GAAG,IAAIlC,KAAK,CAAC+B,IAAN,CAAWI,GAAf,CAAmBT,SAAnB,EAA8BG,OAA9B,CAAV;AAEA,UAAIO,cAAc,GAAG,IAAIpC,KAAK,CAAC+B,IAAN,CAAWC,MAAf,CAAsBR,GAAtB,EAA2BC,IAA3B,CAArB;AAEA,UAAIY,MAAM,GAAG,IAAIrC,KAAK,CAAC+B,IAAN,CAAWO,MAAf,CAAsB;AACjCC,QAAAA,QAAQ,EAAEH;AADuB,OAAtB,CAAb;AAIAC,MAAAA,MAAM,CAACG,MAAP,CAAcN,GAAd,EAhBc,CAgBM;AACrB;;AA7BU,GAAb;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAjC;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzDQ3C,W;;KAAAA,W;AA0DT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n// import MapElement from \"../components/Map/Map\";\nfunction Vaccination() {\n  const { kakao } = window;\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n\n  useEffect(() => {\n    navigator.geolocation.watchPosition((pos) => {\n      let latitude = pos.coords.latitude;\n      let longitude = pos.coords.longitude;\n      let max_latitude = (latitude += 0.01 * 1);\n      let min_latitude = (latitude -= 0.01 * 1);\n      let max_longitude = (longitude += 0.015 * 1);\n      let min_longitude = (longitude -= 0.015 * 1);\n      console.log(max_latitude, min_latitude);\n      Maps.Draw(latitude, longitude);\n    });\n    Maps.init();\n  }, []);\n\n  const Maps = {\n    init() {\n      this.getDate();\n    },\n    async getDate() {\n      const data = await (\n        await fetch(\n          `https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`\n        )\n      ).json();\n      SetData(data.data);\n    },\n    Draw(lat, long) {\n      const container = document.getElementById(\"map\");\n\n      const options = {\n        center: new kakao.maps.LatLng(lat, long),\n        level: 3,\n      };\n\n      var map = new kakao.maps.Map(container, options);\n\n      var markerPosition = new kakao.maps.LatLng(lat, long);\n\n      var marker = new kakao.maps.Marker({\n        position: markerPosition,\n      });\n\n      marker.setMap(map); // 마커 지도위에 그리기\n    },\n  };\n\n  return (\n    <div className=\"Map_wrap\" style={{ width: \"100%\", height: \"100vh\" }}>\n      <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    </div>\n  );\n}\nexport default Vaccination;\n"]},"metadata":{},"sourceType":"module"}