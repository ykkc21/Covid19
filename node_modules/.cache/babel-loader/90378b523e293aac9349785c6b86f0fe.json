{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/World.js\",\n    _s = $RefreshSig$();\n\nimport $ from \"jquery\";\nimport \"../css/World.css\";\nimport Country from \"../components/country/\bCountry\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction World() {\n  _s();\n\n  const world_code = [\"RU\", \"CN\", \"US\", \"DE\", \"FR\", \"JP\", \"GB\", \"IL\"];\n  const [data, SetData] = useState([]);\n  const world = {\n    init() {\n      this.WorldDate();\n      this.animation();\n    },\n\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n\n          for (let i = 0; i < list.length; i++) {\n            const {\n              CountryCode\n            } = list[i];\n            world_code.forEach(code => {\n              if (code == CountryCode) {\n                SetData(data => [list[i], ...data]);\n              }\n            });\n          }\n        }\n      });\n    },\n\n    animation() {\n      const items = document.getElementsByClassName(\"global_Date\"); //   for (let i = 0; i < items.length; i++) {\n      //     const element = items[i];\n      //     $(element).animate({ width: \"250px\", height: \"150px\" });\n      //   }\n    }\n\n  };\n\n  window.onload = () => {\n    world.init();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"World_wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right arrow\",\n      dat_num: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left arrow\",\n      dat_num: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Last_Box main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.map((item, idx) => {\n            return /*#__PURE__*/_jsxDEV(Country, {\n              ID: item.ID,\n              Country: item.Country,\n              TotalConfirmed: item.TotalConfirmed,\n              TotalDeaths: item.TotalDeaths\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"earth_img_box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(World, \"AbzU215CHvR1zzR/f9KkdR2vMPE=\");\n\n_c = World;\nexport default World;\n\nvar _c;\n\n$RefreshReg$(_c, \"World\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/World.js"],"names":["$","Country","useState","World","world_code","data","SetData","world","init","WorldDate","animation","ajax","type","url","dataType","error","err","console","success","res","list","Countries","i","length","CountryCode","forEach","code","items","document","getElementsByClassName","window","onload","map","item","idx","ID","TotalConfirmed","TotalDeaths"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\nimport \"../css/World.css\";\nimport Country from \"../components/country/\bCountry\";\nimport { useState } from \"react\";\nfunction World() {\n  const world_code = [\"RU\", \"CN\", \"US\", \"DE\", \"FR\", \"JP\", \"GB\", \"IL\"];\n  const [data, SetData] = useState([]);\n  const world = {\n    init() {\n      this.WorldDate();\n      this.animation();\n    },\n    WorldDate() {\n      $.ajax({\n        type: \"GET\",\n        url: \"https://api.covid19api.com/summary\",\n        dataType: \"json\",\n        error: function (err) {\n          console.error(err);\n        },\n        success: function (res) {\n          const list = res.Countries; //\n          for (let i = 0; i < list.length; i++) {\n            const { CountryCode } = list[i];\n            world_code.forEach((code) => {\n              if (code == CountryCode) {\n                SetData((data) => [list[i], ...data]);\n              }\n            });\n          }\n        },\n      });\n    },\n    animation() {\n      const items = document.getElementsByClassName(\"global_Date\");\n      //   for (let i = 0; i < items.length; i++) {\n      //     const element = items[i];\n      //     $(element).animate({ width: \"250px\", height: \"150px\" });\n      //   }\n    },\n  };\n  window.onload = () => {\n    world.init();\n  };\n\n  return (\n    <div className=\"World_wrap\">\n      <div className=\"right arrow\" dat_num=\"1\"></div>\n      <div className=\"left arrow\" dat_num=\"2\"></div>\n      <div className=\"Last_Box main\">\n        <div className=\"container\">\n          <ul>\n            {data.map((item, idx) => {\n              return (\n                <Country\n                  key={idx}\n                  ID={item.ID}\n                  Country={item.Country}\n                  TotalConfirmed={item.TotalConfirmed}\n                  TotalDeaths={item.TotalDeaths}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"earth_img_box\"></div>\n    </div>\n  );\n}\n\nexport default World;\n"]},"metadata":{},"sourceType":"module"}