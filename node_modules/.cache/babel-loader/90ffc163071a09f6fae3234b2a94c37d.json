{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Korea.css\";\nimport Chart from \"../components/Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Korea() {\n  _s();\n\n  const Key = \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [loading, SetLoading] = useState(true);\n  useEffect(() => {\n    DataSetting();\n  }, []);\n\n  function DataSetting() {\n    const date = new Date();\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n    const EndDay = month < 10 ? `${year + 0 + month + 0 + day}` : `${year + month + day}`;\n    console.log(date.getDay());\n    let TotalDate = [];\n    $.ajax({\n      type: \"GET\",\n      url: `http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=${Key}&pageNo=1&numOfRows=3&startCreateDt=20191230&endCreateDt=${EndDay}`,\n      dataType: \"xml\",\n      error: function (err) {\n        console.error(err);\n      },\n      success: function (xml) {\n        $(xml).find(\"item\").each((idx, item) => {\n          const deathCnt = $(item).find(\"deathCnt\").text(); // 사망자 수\n\n          const decideCnt = $(item).find(\"decideCnt\").text(); // 확진자 수\n\n          const stateDt = $(item).find(\"stateDt\").text();\n          const createDt = $(item).find(\"createDt\").text(); // console.log(EndDay);\n          // if (stateDt == EndDay) {\n          //   // 오늘 데이터 저장\n          //   const obj = {\n          //     deathCnt,\n          //     decideCnt,\n          //     createDt,\n          //   };\n          //   TotalDate.push(obj);\n          // } else if (stateDt == EndDay * 1 - 1) {\n          //   // 어제 데이터 저장\n          //   const obj = {\n          //     deathCnt,\n          //     decideCnt,\n          //     createDt,\n          //   };\n          //   TotalDate.push(obj);\n          // } else if (stateDt == EndDay * 1 - 2) {\n          //   // 어제 데이터 저장\n          //   const obj = {\n          //     deathCnt,\n          //     decideCnt,\n          //     createDt,\n          //   };\n          //   TotalDate.push(obj);\n          // } else if (stateDt == EndDay * 1 - 3) {\n          //   // 어제 데이터 저장\n          //   const obj = {\n          //     deathCnt,\n          //     decideCnt,\n          //     createDt,\n          //   };\n          //   TotalDate.push(obj);\n          // }\n        });\n        window.localStorage.setItem(\"total\", JSON.stringify(TotalDate)); // 4일치 데이터\n\n        SetLoading(false);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Korea_wrap\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Korea, \"SvRqHUeq6odLG/KxfyDEwKppFVk=\");\n\n_c = Korea;\nexport default Korea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Korea\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/Korea.js"],"names":["useEffect","useState","$","Chart","Korea","Key","loading","SetLoading","DataSetting","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","EndDay","console","log","getDay","TotalDate","ajax","type","url","dataType","error","err","success","xml","find","each","idx","item","deathCnt","text","decideCnt","stateDt","createDt","window","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Korea.css\";\nimport Chart from \"../components/Chart/Chart\";\nfunction Korea() {\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [loading, SetLoading] = useState(true);\n\n  useEffect(() => {\n    DataSetting();\n  }, []);\n\n  function DataSetting() {\n    const date = new Date();\n    const year = date.getFullYear().toString();\n    const month = (date.getMonth() + 1).toString();\n    const day = date.getDate().toString();\n    const EndDay =\n      month < 10 ? `${year + 0 + month + 0 + day}` : `${year + month + day}`;\n    console.log(date.getDay());\n    let TotalDate = [];\n    $.ajax({\n      type: \"GET\",\n      url: `http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=${Key}&pageNo=1&numOfRows=3&startCreateDt=20191230&endCreateDt=${EndDay}`,\n      dataType: \"xml\",\n      error: function (err) {\n        console.error(err);\n      },\n      success: function (xml) {\n        $(xml)\n          .find(\"item\")\n          .each((idx, item) => {\n            const deathCnt = $(item).find(\"deathCnt\").text(); // 사망자 수\n            const decideCnt = $(item).find(\"decideCnt\").text(); // 확진자 수\n            const stateDt = $(item).find(\"stateDt\").text();\n            const createDt = $(item).find(\"createDt\").text();\n\n            // console.log(EndDay);\n            // if (stateDt == EndDay) {\n            //   // 오늘 데이터 저장\n            //   const obj = {\n            //     deathCnt,\n            //     decideCnt,\n            //     createDt,\n            //   };\n            //   TotalDate.push(obj);\n            // } else if (stateDt == EndDay * 1 - 1) {\n            //   // 어제 데이터 저장\n            //   const obj = {\n            //     deathCnt,\n            //     decideCnt,\n            //     createDt,\n            //   };\n            //   TotalDate.push(obj);\n            // } else if (stateDt == EndDay * 1 - 2) {\n            //   // 어제 데이터 저장\n            //   const obj = {\n            //     deathCnt,\n            //     decideCnt,\n            //     createDt,\n            //   };\n            //   TotalDate.push(obj);\n            // } else if (stateDt == EndDay * 1 - 3) {\n            //   // 어제 데이터 저장\n            //   const obj = {\n            //     deathCnt,\n            //     decideCnt,\n            //     createDt,\n            //   };\n            //   TotalDate.push(obj);\n            // }\n          });\n\n        window.localStorage.setItem(\"total\", JSON.stringify(TotalDate)); // 4일치 데이터\n        SetLoading(false);\n      },\n    });\n  }\n\n  return (\n    <div className=\"Korea_wrap\">\n      {loading ? <h1>loading...</h1> : <Chart />}\n    </div>\n  );\n}\n\nexport default Korea;\n"]},"metadata":{},"sourceType":"module"}