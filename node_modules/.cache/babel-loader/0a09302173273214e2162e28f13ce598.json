{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"../css/Vaccination.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Vaccination() {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  const Key = \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.watchPosition(pos => {\n      let latitude = pos.coords.latitude;\n      let longitude = pos.coords.longitude;\n      let max_latitude = latitude += 0.01 * 1;\n      let min_latitude = latitude -= 0.01 * 1;\n      let max_longitude = longitude += 0.015 * 1;\n      let min_longitude = longitude -= 0.015 * 1; // console.log(max_latitude, min_latitude, max_longitude, min_longitude);\n\n      Maps.Draw(latitude, longitude);\n    });\n    Maps.init();\n  }, []);\n  const Maps = {\n    item: [],\n\n    init() {\n      this.getDate();\n    },\n\n    async getDate() {\n      const data = await (await fetch(`https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`)).json();\n      SetData(data.data);\n      this.item = data.data;\n    },\n\n    Draw(lat, long) {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(lat, long),\n        level: 12\n      };\n      var map = new kakao.maps.Map(container, options);\n      this.item.forEach(item => {\n        const {\n          address,\n          centerName,\n          facilityName,\n          lat,\n          lng,\n          sido,\n          sigungu\n        } = item;\n        console.log(\"주소: \" + address, \"이름: \" + centerName, \"장소\" + facilityName, lat, lng, \"지역: \" + sido, \"동: \" + sigungu);\n      }); // var markerPosition = new kakao.maps.LatLng(lat, long);\n      // var marker = new kakao.maps.Marker({\n      //   position: markerPosition,\n      // });\n      // marker.setMap(map); // 마커 지도위에 그리기\n    },\n\n    zoomIn() {},\n\n    zoomOut() {}\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map_wrap\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.zoomIn(),\n      children: \"\\uC9C0\\uB3C4\\uB808\\uBCA8 - 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.zoomIn(),\n      children: \"\\uC9C0\\uB3C4\\uB808\\uBCA8 + 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vaccination, \"5bWMJ8+QXfglENJgHVyCVZn6AFk=\");\n\n_c = Vaccination;\nexport default Vaccination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccination\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js"],"names":["useEffect","useState","Vaccination","kakao","window","Key","data","SetData","navigator","geolocation","watchPosition","pos","latitude","coords","longitude","max_latitude","min_latitude","max_longitude","min_longitude","Maps","Draw","init","item","getDate","fetch","json","lat","long","container","document","getElementById","options","center","maps","LatLng","level","map","Map","forEach","address","centerName","facilityName","lng","sido","sigungu","console","log","zoomIn","zoomOut","width","height"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../css/Vaccination.css\";\nfunction Vaccination() {\n  const { kakao } = window;\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n\n  useEffect(() => {\n    navigator.geolocation.watchPosition((pos) => {\n      let latitude = pos.coords.latitude;\n      let longitude = pos.coords.longitude;\n\n      let max_latitude = (latitude += 0.01 * 1);\n      let min_latitude = (latitude -= 0.01 * 1);\n      let max_longitude = (longitude += 0.015 * 1);\n      let min_longitude = (longitude -= 0.015 * 1);\n\n      // console.log(max_latitude, min_latitude, max_longitude, min_longitude);\n\n      Maps.Draw(latitude, longitude);\n    });\n    Maps.init();\n  }, []);\n\n  const Maps = {\n    item: [],\n    init() {\n      this.getDate();\n    },\n    async getDate() {\n      const data = await (\n        await fetch(\n          `https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`\n        )\n      ).json();\n      SetData(data.data);\n      this.item = data.data;\n    },\n    Draw(lat, long) {\n      const container = document.getElementById(\"map\");\n\n      const options = {\n        center: new kakao.maps.LatLng(lat, long),\n        level: 12,\n      };\n\n      var map = new kakao.maps.Map(container, options);\n\n      this.item.forEach((item) => {\n        const { address, centerName, facilityName, lat, lng, sido, sigungu } =\n          item;\n        console.log(\n          \"주소: \" + address,\n          \"이름: \" + centerName,\n          \"장소\" + facilityName,\n          lat,\n          lng,\n          \"지역: \" + sido,\n          \"동: \" + sigungu\n        );\n      });\n\n      // var markerPosition = new kakao.maps.LatLng(lat, long);\n\n      // var marker = new kakao.maps.Marker({\n      //   position: markerPosition,\n      // });\n\n      // marker.setMap(map); // 마커 지도위에 그리기\n    },\n    zoomIn() {},\n    zoomOut() {},\n  };\n\n  return (\n    <div className=\"Map_wrap\" style={{ width: \"100%\", height: \"100vh\" }}>\n      <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n      <button onClick={this.zoomIn()}>지도레벨 - 1</button>\n      <button onClick={this.zoomIn()}>지도레벨 + 1</button>\n    </div>\n  );\n}\nexport default Vaccination;\n"]},"metadata":{},"sourceType":"module"}