{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"../css/Vaccination.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Vaccination() {\n  _s();\n\n  const {\n    kakao\n  } = window;\n  const Key = \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [position, setPostion] = useState({});\n\n  const onChange = e => setText(e.target.value);\n\n  useEffect(() => {\n    Maps.init(); // navigator.geolocation.watchPosition((e) => {\n    // });\n  }, []);\n  const Maps = {\n    // item: [],\n    init() {\n      this.getDate();\n    },\n\n    async getDate() {\n      const data = await (await fetch(`https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`)).json();\n      SetData(data.data);\n    },\n\n    Draw(item) {\n      var mapContainer = document.getElementById(\"map\"),\n          // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(37.57613074143258, 126.97696604175948),\n        // 지도의 중심좌표\n        level: 12 // 지도의 확대 레벨\n\n      };\n      var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n      const markers = [];\n      data.forEach(items => {\n        const {\n          address,\n          // 주소\n          centerName,\n          //접종센터 이름\n          facilityName,\n          // 시설명\n          id,\n          // 아이디\n          lat,\n          // 위도\n          lng,\n          // 경도\n          phoneNumber,\n          // 시설 전화번호\n          sido,\n          // 시도\n          sigungu // 시군구\n\n        } = items;\n        const area = `${sido[0]}${sido[1]}`;\n\n        if (item === area) {\n          markers.push(new kakao.maps.LatLng(items.lat, items.lng));\n        }\n      });\n      let bounds = new kakao.maps.LatLngBounds();\n      let i, marker;\n\n      for (i = 0; i < markers.length; i++) {\n        // 배열의 좌표들이 잘 보이게 마커를 지도에 추가합니다\n        marker = new kakao.maps.Marker({\n          position: markers[i],\n          clickable: true\n        });\n        marker.setMap(map); // LatLngBounds 객체에 좌표를 추가합니다\n\n        bounds.extend(markers[i]); // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n\n        var iwContent = \"<div>Hello World!</div>\",\n            // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwRemoveable = true; // 인포윈도우를 생성합니다\n\n        var infowindow = new kakao.maps.InfoWindow({\n          position: markers[i],\n          content: iwContent,\n          removable: iwRemoveable\n        });\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          console.log(e);\n          infowindow.open(map, marker);\n        });\n      }\n\n      map.setBounds(bounds);\n\n      if (markers.length === 0) {\n        alert(\"알맞는 데이터가 없습니다.\");\n      } else {}\n    },\n\n    ClickDraw(text) {\n      if (text == \"\") {\n        alert(\"입력값이 없습니다.\");\n      } else {\n        $(\".Text_Input\").delay(30).animate({\n          opacity: \"0\"\n        }, \"slow\").css({\n          \"z-index\": \"-1\"\n        });\n        $(\"#map\").animate({\n          opacity: \"1\"\n        }, \"slow\").css({\n          \"z-index\": \"10\"\n        });\n        this.Draw(text);\n      }\n    },\n\n    SlideAnimtion() {\n      const slide = document.getElementsByClassName(\"slide\");\n      [slide].forEach(item => {\n        for (let i = 0; i < item.length; i++) {\n          const element = item[i];\n          $(element).animate({\n            left: \"50%\"\n          }, \"slow\");\n        }\n      });\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map_wrap\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Text_Input\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title slide\",\n        children: \"\\uCF54\\uB85C\\uB098 \\uC608\\uBC29\\uC811\\uC885\\uC13C\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box slide\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: onChange,\n          value: text,\n          style: {\n            textAlign: \"center\"\n          },\n          placeholder: \" \\uC6D0\\uD558\\uB294 \\uC9C0\\uC5ED\\uC744 \\uAC80\\uC0C9\\uD558\\uC138\\uC694! (Ex:\\uC778\\uCC9C)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => Maps.ClickDraw(e.target.value),\n          value: text,\n          className: \"search\",\n          children: \"\\uAC80\\uC0C9\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vaccination, \"cyAc1QtQgTpWgOQ40FOhvw4Qx70=\");\n\n_c = Vaccination;\nexport default Vaccination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vaccination\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/Covid19/src/routes/Vaccination.js"],"names":["useEffect","useState","Link","FontAwesomeIcon","faHome","$","Vaccination","kakao","window","Key","data","SetData","text","setText","position","setPostion","onChange","e","target","value","Maps","init","getDate","fetch","json","Draw","item","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","markers","forEach","items","address","centerName","facilityName","id","lat","lng","phoneNumber","sido","sigungu","area","push","bounds","LatLngBounds","i","marker","length","Marker","clickable","setMap","extend","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","event","addListener","console","log","open","setBounds","alert","ClickDraw","delay","animate","opacity","css","SlideAnimtion","slide","getElementsByClassName","element","left","width","height","textAlign"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../css/Vaccination.css\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport $ from \"jquery\";\nfunction Vaccination() {\n  const { kakao } = window;\n  const Key =\n    \"ni1KPPPSl7rn5wXOSl9YieknHyh6P%2Fk8wXj4aOPMa4BxknTBR71SKg8rboxd1MyzRoMU3uNHxaOCfev05Bcn5A%3D%3D\";\n  const [data, SetData] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [position, setPostion] = useState({});\n  const onChange = (e) => setText(e.target.value);\n\n  useEffect(() => {\n    Maps.init();\n    // navigator.geolocation.watchPosition((e) => {\n\n    // });\n  }, []);\n\n  const Maps = {\n    // item: [],\n    init() {\n      this.getDate();\n    },\n    async getDate() {\n      const data = await (\n        await fetch(\n          `https://api.odcloud.kr/api/15077586/v1/centers?page=1&perPage=400&returnType=json&serviceKey=${Key}`\n        )\n      ).json();\n      SetData(data.data);\n    },\n    Draw(item) {\n      var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n        mapOption = {\n          center: new kakao.maps.LatLng(37.57613074143258, 126.97696604175948), // 지도의 중심좌표\n          level: 12, // 지도의 확대 레벨\n        };\n      var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n      const markers = [];\n      data.forEach((items) => {\n        const {\n          address, // 주소\n          centerName, //접종센터 이름\n          facilityName, // 시설명\n          id, // 아이디\n          lat, // 위도\n          lng, // 경도\n          phoneNumber, // 시설 전화번호\n          sido, // 시도\n          sigungu, // 시군구\n        } = items;\n        const area = `${sido[0]}${sido[1]}`;\n        if (item === area) {\n          markers.push(new kakao.maps.LatLng(items.lat, items.lng));\n        }\n      });\n\n      let bounds = new kakao.maps.LatLngBounds();\n      let i, marker;\n      for (i = 0; i < markers.length; i++) {\n        // 배열의 좌표들이 잘 보이게 마커를 지도에 추가합니다\n        marker = new kakao.maps.Marker({\n          position: markers[i],\n          clickable: true,\n        });\n        marker.setMap(map);\n\n        // LatLngBounds 객체에 좌표를 추가합니다\n        bounds.extend(markers[i]);\n\n        // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n        var iwContent = \"<div>Hello World!</div>\", // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n          iwRemoveable = true;\n\n        // 인포윈도우를 생성합니다\n        var infowindow = new kakao.maps.InfoWindow({\n          position: markers[i],\n          content: iwContent,\n          removable: iwRemoveable,\n        });\n\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          console.log(e);\n          infowindow.open(map, marker);\n        });\n      }\n\n      map.setBounds(bounds);\n\n      if (markers.length === 0) {\n        alert(\"알맞는 데이터가 없습니다.\");\n      } else {\n      }\n    },\n    ClickDraw(text) {\n      if (text == \"\") {\n        alert(\"입력값이 없습니다.\");\n      } else {\n        $(\".Text_Input\")\n          .delay(30)\n          .animate({ opacity: \"0\" }, \"slow\")\n          .css({ \"z-index\": \"-1\" });\n        $(\"#map\").animate({ opacity: \"1\" }, \"slow\").css({ \"z-index\": \"10\" });\n        this.Draw(text);\n      }\n    },\n    SlideAnimtion() {\n      const slide = document.getElementsByClassName(\"slide\");\n      [slide].forEach((item) => {\n        for (let i = 0; i < item.length; i++) {\n          const element = item[i];\n          $(element).animate({ left: \"50%\" }, \"slow\");\n        }\n      });\n    },\n  };\n\n  return (\n    <div className=\"Map_wrap\" style={{ width: \"100%\", height: \"100vh\" }}>\n      <div id=\"map\"></div>\n      <div className=\"Text_Input\">\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faHome} />\n        </Link>\n        <h1 className=\"title slide\">코로나 예방접종센터</h1>\n        <div className=\"input_box slide\">\n          <input\n            type=\"text\"\n            onChange={onChange}\n            value={text}\n            style={{ textAlign: \"center\" }}\n            placeholder=\" 원하는 지역을 검색하세요! (Ex:인천)\"\n          />\n          <button\n            onClick={(e) => Maps.ClickDraw(e.target.value)}\n            value={text}\n            className=\"search\"\n          >\n            검색하기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Vaccination;\n"]},"metadata":{},"sourceType":"module"}